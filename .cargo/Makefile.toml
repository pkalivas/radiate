[env]
RADIATE_PYTHON_VERSION = "3.12"
UV_PROJECT_ENVIRONMENT = ".venv"

[config]
default_to_workspace = false

[tasks.print-env]
workspace = false
script = '''
echo RADIATE_PYTHON_VERSION=${RADIATE_PYTHON_VERSION:-<unset>}
echo UV_PROJECT_ENVIRONMENT=${UV_PROJECT_ENVIRONMENT:-<unset>}
'''

[tasks.cargo-py]
description = "UV + maturin (parametrized). Use MODE=gil|nogil and MATURIN_SUBCMD=develop|build"
script_extension = "py"
cwd = "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}"
script = '''
.cargo/scripts/cargo.py "$@"
'''

[tasks.python]
description = "UV + maturin"
script_extension = "py"
cwd = "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}"
script = '''
.cargo/scripts/cargo.py "$@"
'''

[tasks.example-run]
description = "Run an example"
cwd = "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}"
script = '''
#!/usr/bin/env bash
set -euo pipefail

echo "[example-run] --rs-- args: $*"

main() {
  # Skip a leading `--` forwarded by the alias
  if [[ "${1:-}" == "--" ]]; then shift; fi

  name="${1:-}"
  if [[ -z "$name" ]]; then
    echo "usage: cargo ex <example-name|subpath>"
    exit 2
  fi

  root="${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY:-$(pwd)}"

  manifest=""
  case "$name" in
    */Cargo.toml)
      manifest="$([[ "$name" = /* ]] && echo "$name" || echo "$root/$name")"
      ;;
    */*)
      manifest="$root/examples/$name/Cargo.toml"
      ;;
    *)
      if [[ -f "$root/examples/$name/Cargo.toml" ]]; then
        manifest="$root/examples/$name/Cargo.toml"
      else
        manifest="$(find "$root/examples" -maxdepth 3 -type f -name Cargo.toml -path "*/$name/Cargo.toml" | head -n1 || true)"
      fi
      ;;
  esac

  if [[ -z "${manifest:-}" || ! -f "$manifest" ]]; then
    echo "example not found for: $name"
    exit 2
  fi

  echo "[run] cargo run --manifest-path $manifest --release"
  exec cargo run --manifest-path "$manifest" --release
}

main "$@"
'''