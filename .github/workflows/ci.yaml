name: CI

on:
  push:
    branches: [ main, master ]
    tags: ['*']
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  ACT: 'false'

jobs:
  linux:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          # glibc modern
          - { target: x86_64,  manylinux: manylinux_2_28 }
          - { target: aarch64, manylinux: manylinux_2_28 }
          # older/alt arches need manylinux2014
          - { target: i686,    manylinux: manylinux2014 }
          - { target: armv7,   manylinux: manylinux2014 }
          - { target: s390x,   manylinux: manylinux2014 }
          - { target: ppc64le, manylinux: manylinux2014 }
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      # ---------- ABI3 (GIL) wheels ----------
      - name: Build wheels (abi3 • ${{ matrix.target }} • ${{ matrix.manylinux }})
        uses: PyO3/maturin-action@v1
        with:
          maturin-version: '1.9.4'
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux }}
          args: >
            build
            --release
            --out dist
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}

      # ---------- Free-threaded cp313t wheels ----------
      - name: Build wheels (cp313t • ${{ matrix.target }} • ${{ matrix.manylinux }})
        uses: PyO3/maturin-action@v1
        with:
          maturin-version: '1.9.4'
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux }}
          args: >
            build
            --release
            --out dist
            -i python3.13t
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.target }}
          path: dist/*

  musllinux:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        target: [ x86_64, aarch64, armv7 ]
    steps:
      - uses: actions/checkout@v4

      - name: Build wheels (abi3 • musllinux_1_2 • ${{ matrix.target }})
        uses: PyO3/maturin-action@v1
        with:
          maturin-version: '1.9.4'
          target: ${{ matrix.target }}
          manylinux: musllinux_1_2
          args: >
            build
            --release
            --out dist
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: Build wheels (cp313t • musllinux_1_2 • ${{ matrix.target }})
        uses: PyO3/maturin-action@v1
        with:
          maturin-version: '1.9.4'
          target: ${{ matrix.target }}
          manylinux: musllinux_1_2
          args: >
            build
            --release
            --out dist
            -i python3.13t
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.target }}
          path: dist/*

  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { target: x86_64, py_arch: x64 }
          - { target: i686,   py_arch: x86 }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: ${{ matrix.py_arch }}
      - name: Build wheels (ABI3 • Windows • ${{ matrix.target }})
        uses: PyO3/maturin-action@v1
        with:
          maturin-version: '1.9.4'
          target: ${{ matrix.target }}
          args: >
            build
            --release
            --out dist
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.target }}
          path: dist/*

  macos:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Build wheels (ABI3 • macOS universal2)
        uses: PyO3/maturin-action@v1
        with:
          maturin-version: '1.9.4'
          args: >
            build
            --release
            --out dist
            --universal2
            --interpreter python3
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-universal2
          path: dist/*

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          maturin-version: '1.9.4'
          command: sdist
          args: --out dist
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist/*

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ linux, musllinux, windows, macos, sdist ]
    if: ${{ (startsWith(github.ref, 'refs/tags/')) && (env.ACT != true) }}
    permissions:
      id-token: write
      contents: write
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist-collect
          merge-multiple: true

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'dist-collect/**/*'

      - name: Gather dists
        run: |
          mkdir -p dist
          find dist-collect -type f -name "*.whl" -exec cp {} dist/ \;
          find dist-collect -type f -name "*.tar.gz" -exec cp {} dist/ \;
          ls -l dist

      - name: Publish to PyPI (Trusted Publisher)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          skip-existing: true